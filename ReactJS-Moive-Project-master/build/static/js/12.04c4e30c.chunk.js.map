{"version":3,"sources":["containers/ADMIN/Auth/modules/action.js","containers/ADMIN/Auth/index.js"],"names":["actAuthSuccess","user","type","AUTH_ADMIN_SUCCESS","Auth","props","handleOnChange","e","setState","target","name","value","handleLogin","preventDefault","taiKhoan","state","username","matKhau","password","fetchAdminLogin","history","renderNoti","errorUser","className","response","data","this","loading","Loading","onSubmit","onChange","Component","connect","authAdminReducer","error","dispatch","a","AUTH_ADMIN_REQUEST","usersApi","postLogIn","resData","maLoaiNguoiDung","localStorage","setItem","USER_KEY","JSON","stringify","push","alert","AUTH_ADMIN_FAILED","actFetchAdminLogin"],"mappings":"4OAcMA,EAAiB,SAACC,GACtB,MAAO,CACLC,KAAMC,IACNF,S,gBCZEG,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,eAAiB,SAACC,GAChB,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAXX,EAenBC,YAAc,SAACL,GACbA,EAAEM,iBACF,IAAMZ,EAAO,CACXa,SAAU,EAAKC,MAAMC,SACrBC,QAAS,EAAKF,MAAMG,UAItB,EAAKb,MAAMc,gBAAgBlB,EAAM,EAAKI,MAAMe,UAvB3B,EA0BnBC,WAAa,WAAO,IACVC,EAAc,EAAKjB,MAAnBiB,UACR,GAAIA,EACF,OACE,yBAAKC,UAAU,sBAAf,IAAsCD,EAAUE,SAASC,OA3B7D,EAAKV,MAAQ,CACXC,SAAU,GACVE,SAAU,IALK,E,qDAoCjB,OAFoBQ,KAAKrB,MAAjBsB,QAEY,kBAACC,EAAA,EAAD,MAElB,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,0BAAMM,SAAUH,KAAKd,aAClBc,KAAKL,aACN,yBAAKE,UAAU,cACb,oDACA,2BACEO,SAAUJ,KAAKpB,eACfI,KAAK,WACLR,KAAK,OACLqB,UAAU,eACVZ,MAAOe,KAAKX,MAAMC,YAGtB,yBAAKO,UAAU,cACb,qDACA,2BACEO,SAAUJ,KAAKpB,eACfI,KAAK,WACLR,KAAK,WACLqB,UAAU,eACVZ,MAAOe,KAAKX,MAAMG,YAGtB,4BAAQhB,KAAK,SAASqB,UAAU,mBAC7B,IADH,gD,GAhEKQ,aA2FJC,uBAdS,SAACjB,GACvB,MAAO,CACLY,QAASZ,EAAMkB,iBAAiBN,QAChCL,UAAWP,EAAMkB,iBAAiBC,UAGX,SAACC,GAC1B,MAAO,CACLhB,gBAAiB,SAAClB,EAAMmB,GACtBe,EDjEqB,SAAClC,EAAMmB,GAChC,8CAAO,WAAOe,GAAP,eAAAC,EAAA,6DACLD,EAlBK,CACLjC,KAAMmC,MAgBD,kBAGmBC,IAASC,UAAUtC,GAHtC,OAGGuC,EAHH,OAKHL,EAASnC,EAAewC,IAGQ,YAA5BA,EAAQC,iBACVC,aAAaC,QAAQC,IAAUC,KAAKC,UAAUN,IAE9CpB,EAAQ2B,KAAK,eAEbC,MAAM,qCAbL,gDAgBHb,GAvBiBD,EAuBM,EAAD,GAtBnB,CACLhC,KAAM+C,IACNf,WAIK,kCAPa,IAACA,IAOd,oBAAP,sDCgEagB,CAAmBjD,EAAMmB,QAKzBY,CAA6C5B","file":"static/js/12.04c4e30c.chunk.js","sourcesContent":["import {\n  AUTH_ADMIN_REQUEST,\n  AUTH_ADMIN_SUCCESS,\n  AUTH_ADMIN_FAILED,\n} from \"./constant\";\n\nimport { USER_KEY } from \"../../../../constants/config\";\nimport usersApi from \"../../../../api/usersApi\";\n\nconst actAuthRequest = () => {\n  return {\n    type: AUTH_ADMIN_REQUEST,\n  };\n};\nconst actAuthSuccess = (user) => {\n  return {\n    type: AUTH_ADMIN_SUCCESS,\n    user,\n  };\n};\nconst actAuthFailed = (error) => {\n  return {\n    type: AUTH_ADMIN_FAILED,\n    error,\n  };\n};\nconst actFetchAdminLogin = (user, history) => {\n  return async (dispatch) => {\n    dispatch(actAuthRequest());\n    try {\n      const resData = await usersApi.postLogIn(user);\n      // console.log(resData);\n      dispatch(actAuthSuccess(resData));\n\n      //dua xuong localStorge\n      if (resData.maLoaiNguoiDung === \"QuanTri\") {\n        localStorage.setItem(USER_KEY, JSON.stringify(resData));\n        //sau do, thanh cong thi chuyen huong sang trang dashboard\n        history.push(\"/dashboard\");\n      } else {\n        alert(\"Tai khoan khong co quyen truy cap\");\n      }\n    } catch (error) {\n      dispatch(actAuthFailed(error));\n      // console.log(error.response?.data);\n    }\n  };\n};\n\nexport { actFetchAdminLogin };\n","import React, { Component } from \"react\";\nimport { actFetchAdminLogin } from \"./modules/action\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../Components/Loading\";\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n  }\n\n  handleOnChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleLogin = (e) => {\n    e.preventDefault();\n    const user = {\n      taiKhoan: this.state.username,\n      matKhau: this.state.password,\n    };\n    // console.log(e);\n\n    this.props.fetchAdminLogin(user, this.props.history);\n  };\n\n  renderNoti = () => {\n    const { errorUser } = this.props;\n    if (errorUser)\n      return (\n        <div className=\"alert alert-danger\"> {errorUser.response.data}</div>\n      );\n  };\n  render() {\n    const { loading } = this.props;\n\n    if (loading) return <Loading />;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 mx-auto\">\n            <form onSubmit={this.handleLogin}>\n              {this.renderNoti()}\n              <div className=\"form-group\">\n                <label>Tài khoản</label>\n                <input\n                  onChange={this.handleOnChange}\n                  name=\"username\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.username}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Mật khẩu</label>\n                <input\n                  onChange={this.handleOnChange}\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"form-control\"\n                  value={this.state.password}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-success\">\n                {\" \"}\n                Đăng nhập trang Admin\n                \n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.authAdminReducer.loading,\n    errorUser: state.authAdminReducer.error,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAdminLogin: (user, history) => {\n      dispatch(actFetchAdminLogin(user, history));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n"],"sourceRoot":""}